{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Piattaforme-Huberway/Authentication/src/pages/Step1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Step1 = ({\n  formData,\n  handleInputChange,\n  handleNext\n}) => {\n  _s();\n  const [emailValid, setEmailValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const validateEmail = async () => {\n    if (formData.email && /\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      // Make API request to check if the email is valid\n      try {\n        const response = await fetch('https://api.huberway.com/auth/is-new-email', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: formData.email\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const result = await response.json();\n        if (result.type === 'registered') {\n          setErrorMessage('This email is already registered.');\n          setEmailValid(false);\n        } else {\n          setEmailValid(true);\n          setErrorMessage('');\n          sendOtp(formData.email); // Send OTP after email is validated\n        }\n      } catch (error) {\n        setErrorMessage('Error while verifying email.');\n        setEmailValid(false);\n      }\n    } else {\n      setErrorMessage('Invalid email format.');\n      setEmailValid(false);\n    }\n  };\n  useEffect(() => {\n    validateEmail();\n  }, [formData.email]);\n  const sendOtp = async email => {\n    // Make API request to send OTP to the user\n    try {\n      const response = await fetch('https://api.huberway.com/auth/send-mail-verify', {\n        method: 'POST',\n        body: JSON.stringify({\n          email\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await response.json();\n      if (result.success) {\n        setOtpSent(true);\n        setErrorMessage('');\n      } else {\n        setErrorMessage('Failed to send OTP. Please try again.');\n        setOtpSent(false);\n      }\n    } catch (error) {\n      setErrorMessage('Error while sending OTP.');\n      setOtpSent(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 head-register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create your free account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"100% free. No credit card needed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), !emailValid && formData.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: \"This email is already registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      disabled: !emailValid,\n      className: \"btn btn-primary btn-cons m-t-10 btn-login\",\n      children: \"Verify Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), otpSent && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"OTP has been sent to your email address. Please check your inbox.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"text-information\",\n      children: [\"We\\u2019re committed to your privacy. Huberway uses the information you provide to us to contact you about our relevant content, products, and services. You may unsubscribe from these communications at any time. For more information, check out our \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Privacy Policy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 260\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Step1, \"C4FX4fdm7AfIuLFNnYmc5TTcPd0=\");\n_c = Step1;\nexport default Step1;\nvar _c;\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Step1","formData","handleInputChange","handleNext","_s","emailValid","setEmailValid","errorMessage","setErrorMessage","otpSent","setOtpSent","validateEmail","email","test","response","fetch","method","body","JSON","stringify","headers","result","json","type","sendOtp","error","success","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","required","onClick","disabled","class","href","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/Piattaforme-Huberway/Authentication/src/pages/Step1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Step1 = ({ formData, handleInputChange, handleNext }) => {\n    const [emailValid, setEmailValid] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [otpSent, setOtpSent] = useState(false);\n\n    const validateEmail = async () => {\n        if (formData.email && /\\S+@\\S+\\.\\S+/.test(formData.email)) {\n            // Make API request to check if the email is valid\n            try {\n                const response = await fetch('https://api.huberway.com/auth/is-new-email', {\n                    method: 'POST',\n                    body: JSON.stringify({ email: formData.email }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n                const result = await response.json();\n                if (result.type === 'registered') {\n                    setErrorMessage('This email is already registered.');\n                    setEmailValid(false);\n                } else {\n                    setEmailValid(true);\n                    setErrorMessage('');\n                    sendOtp(formData.email);  // Send OTP after email is validated\n                }\n            } catch (error) {\n                setErrorMessage('Error while verifying email.');\n                setEmailValid(false);\n            }\n        } else {\n            setErrorMessage('Invalid email format.');\n            setEmailValid(false);\n        }\n    };\n\n    useEffect(() => {\n        validateEmail();\n    }, [formData.email]);\n\n\n    const sendOtp = async (email) => {\n        // Make API request to send OTP to the user\n        try {\n            const response = await fetch('https://api.huberway.com/auth/send-mail-verify', {\n                method: 'POST',\n                body: JSON.stringify({ email }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                setOtpSent(true);\n                setErrorMessage('');\n            } else {\n                setErrorMessage('Failed to send OTP. Please try again.');\n                setOtpSent(false);\n            }\n        } catch (error) {\n            setErrorMessage('Error while sending OTP.');\n            setOtpSent(false);\n        }\n    };\n    return (\n\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-12 head-register\">\n                    <h1>Create your free account</h1>\n                    <h5>100% free. No credit card needed.</h5>\n                </div>\n            </div>\n\n            <div className=\"row mb-20\">\n                <div className=\"col-md-12\">\n                    <label>Email address</label>\n                    <input type=\"email\" name=\"email\" value={formData.email} onChange={handleInputChange} className=\"form-control\" required />\n                    {!emailValid && formData.email && <div className=\"text-danger\">This email is already registered</div>}\n                </div>\n            </div>\n            <button onClick={handleNext} disabled={!emailValid} className=\"btn btn-primary btn-cons m-t-10 btn-login\">\n                Verify Email\n            </button>\n            {/* Information message after OTP is sent */}\n            {otpSent && <p>OTP has been sent to your email address. Please check your inbox.</p>}\n\n\n            <p class=\"text-information\">\n                We’re committed to your privacy. Huberway uses the information you provide to us to contact you about our relevant content, products, and services. You may unsubscribe from these communications at any time. For more information, check out our <a href=\"#\">Privacy Policy</a>\n            </p>\n        </>\n    );\n};\n\nexport default Step1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}