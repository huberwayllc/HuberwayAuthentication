{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Piattaforme-Huberway/Authentication/src/pages/Step2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Step2 = ({\n  formData,\n  handleInputChange,\n  handleNext,\n  handleBack\n}) => {\n  _s();\n  const [otp, setOtp] = useState(Array(6).fill(''));\n  const inputRefs = useRef([]);\n\n  // Handle change for OTP input\n  const handleOtpChange = (e, index) => {\n    const newOtp = [...otp];\n    const {\n      value\n    } = e.target;\n    if (/^[0-9]?$/.test(value)) {\n      newOtp[index] = value;\n      setOtp(newOtp);\n\n      // Move to next input if not the last one and value is valid\n      if (value && index < 5) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n\n  // Handle backspace to move to previous input field\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace' && !otp[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n  };\n\n  // Handle OTP paste\n  const handlePaste = e => {\n    const pasteData = e.clipboardData.getData('text').slice(0, 6);\n    const newOtp = [...otp];\n\n    // Paste OTP code into the fields, focus the last filled field\n    pasteData.split('').forEach((char, index) => {\n      if (/^[0-9]$/.test(char)) {\n        newOtp[index] = char;\n      }\n    });\n    setOtp(newOtp);\n\n    // Focus the next input after the last filled one\n    const nextIndex = pasteData.length < 6 ? pasteData.length : 5;\n    inputRefs.current[nextIndex].focus();\n  };\n\n  // Verify OTP\n  const verifyOtp = async () => {\n    const otpValue = otp.join('');\n    const response = await fetch('https://api.huberway.com/auth/verify-mail', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: formData.email,\n        otp: otpValue\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n    return result.type !== 'failed';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      className: \"back\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fal fa-chevron-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" Back\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 head-register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Check your email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Enter the verification code sent to: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: formData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-form\",\n        style: {\n          margin: `auto`,\n          alignContent: `center`\n        },\n        onPaste: handlePaste,\n        children: otp.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: el => inputRefs.current[index] = el,\n          className: \"otp-field\",\n          type: \"text\",\n          value: value,\n          maxLength: 1,\n          onChange: e => handleOtpChange(e, index),\n          onKeyDown: e => handleKeyDown(e, index),\n          autoComplete: \"off\",\n          style: {\n            textAlign: 'center',\n            width: '13%',\n            marginRight: '5px'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          const validOtp = await verifyOtp();\n          if (validOtp) handleNext();\n        },\n        disabled: otp.join('').length < 6,\n        className: \"btn btn-primary btn-cons m-t-10 btn-login\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Step2, \"LTpaO85GLQ7A9NXh2mVeMhQJozA=\");\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Step2","formData","handleInputChange","handleNext","handleBack","_s","otp","setOtp","Array","fill","inputRefs","handleOtpChange","e","index","newOtp","value","target","test","current","focus","handleKeyDown","key","handlePaste","pasteData","clipboardData","getData","slice","split","forEach","char","nextIndex","length","verifyOtp","otpValue","join","response","fetch","method","body","JSON","stringify","email","headers","result","json","type","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","alignContent","onPaste","map","ref","el","maxLength","onChange","onKeyDown","autoComplete","textAlign","width","marginRight","validOtp","disabled","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/Piattaforme-Huberway/Authentication/src/pages/Step2.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst Step2 = ({ formData, handleInputChange, handleNext, handleBack }) => {\n  const [otp, setOtp] = useState(Array(6).fill(''));\n  const inputRefs = useRef([]);\n\n  // Handle change for OTP input\n  const handleOtpChange = (e, index) => {\n    const newOtp = [...otp];\n    const { value } = e.target;\n\n    if (/^[0-9]?$/.test(value)) {\n      newOtp[index] = value;\n      setOtp(newOtp);\n\n      // Move to next input if not the last one and value is valid\n      if (value && index < 5) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n\n  // Handle backspace to move to previous input field\n  const handleKeyDown = (e, index) => {\n    if (e.key === 'Backspace' && !otp[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n  };\n\n  // Handle OTP paste\n  const handlePaste = (e) => {\n    const pasteData = e.clipboardData.getData('text').slice(0, 6);\n    const newOtp = [...otp];\n\n    // Paste OTP code into the fields, focus the last filled field\n    pasteData.split('').forEach((char, index) => {\n      if (/^[0-9]$/.test(char)) {\n        newOtp[index] = char;\n      }\n    });\n\n    setOtp(newOtp);\n\n    // Focus the next input after the last filled one\n    const nextIndex = pasteData.length < 6 ? pasteData.length : 5;\n    inputRefs.current[nextIndex].focus();\n  };\n\n  // Verify OTP\n  const verifyOtp = async () => {\n    const otpValue = otp.join('');\n    const response = await fetch('https://api.huberway.com/auth/verify-mail', {\n      method: 'POST',\n      body: JSON.stringify({ email: formData.email, otp: otpValue }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const result = await response.json();\n    return result.type !== 'failed';\n  };\n\n  return (\n    <>\n      <button onClick={handleBack} className=\"back\">\n        <i className=\"fal fa-chevron-left\"></i> Back\n      </button>\n      <div className=\"row\">\n        <div className=\"col-md-12 head-register\">\n          <h1>Check your email address</h1>\n          <h5>Enter the verification code sent to: <b>{formData.email}</b></h5>\n        </div>\n      </div>\n      <div className=\"row mb-20\">\n        <div className=\"otp-form\" style={{ margin: `auto`, alignContent: `center` }} onPaste={handlePaste}>\n          {otp.map((value, index) => (\n            <input\n              key={index}\n              ref={(el) => (inputRefs.current[index] = el)}\n              className=\"otp-field\"\n              type=\"text\"\n              value={value}\n              maxLength={1}\n              onChange={(e) => handleOtpChange(e, index)}\n              onKeyDown={(e) => handleKeyDown(e, index)}\n              autoComplete=\"off\"\n              style={{ textAlign: 'center', width: '13%', marginRight: '5px' }}\n            />\n          ))}\n        </div>\n        <button\n          onClick={async () => {\n            const validOtp = await verifyOtp();\n            if (validOtp) handleNext();\n          }}\n          disabled={otp.join('').length < 6}\n          className=\"btn btn-primary btn-cons m-t-10 btn-login\"\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Step2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}